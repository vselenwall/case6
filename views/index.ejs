<!DOCTYPE html>
<html lang="sv">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calendar App</title>

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
        integrity="sha512-Fo3rlrZj/k7ujTnHg4CGR2D7kSs0v4LLanw2qksYuRlEzO+tcaEPQogQ0KaoGN26/zrn20ImR1DfuLWnOo7aBA=="
        crossorigin="anonymous" referrerpolicy="no-referrer" />

    <link rel="stylesheet" href="/styles/style.css">

</head>

<body>

    <%- include('partials/header.ejs') %>

    <main>

        <div class="week-section">

            <div class="week-header">
                <div id="previous"><i class="fa-solid fa-angle-left"></i></div>
                <h3>Week</h3>
                <div id="next"><i class="fa-solid fa-angle-right"></i></div>
            </div>

            <div class="weekdays">
                <div class="mon">M
                </div>
                <div class="tue">T
                </div>
                <div class="wed">W
                </div>
                <div class="thurs">T
                </div>
                <div class="fri">F
                </div>
                <div class="sat">S
                </div>
                <div class="sun">S
                </div>
            </div>
            <div id="calendar-dates"></div>
        </div>



        <div class="overlay">
            <div id="event-creator">
                <form action="/index" method="post">
                    <label for="title">Title</label><br>
                    <input type="text" id="title" name="title" required><br>
                    <label for="date">Date</label>
                    <input type="date" id="date" name="date" value="2022-05-31" min="2022-01-01" max="2022-12-31">
                    <br><br><input type="submit" id="addEvent" class="event-button" value="Create event">
                </form>
            </div>
        </div>


        <div id="eventBox"></div>


        <ul>

            <button id="show-all">Show all events</button>

            <% locals.events.forEach(element => { %>
            <li id="list">
                <div id="element-date">
                    <%= element.date %>
                </div>
                <div class="element-title">
                    <p>
                        <%= element.title %>
                    </p>
                </div>
                <button class="edit" data-id="<%= element.id %>" id="<%= element.id %>"><i
                        class="fa-solid fa-pen"></i></button>
                <button class="remove" onclick="deleteEvent(<%= element.id %>)"><i
                        class="fa-solid fa-circle-minus"></i></button>
            </li>
            <% }) %>
        </ul>


    </main>

    <%- include('partials/footer.ejs') %>

    <div id="overlay-bg"></div>

    <script>
        // DELETE EVENT 

        async function deleteEvent(id) {
            const response = await fetch(`/events/${id}`, {
                method: "delete"
            });
            if (response.redirected) {
                window.location.href = response.url;
            }
        }

        // EDIT EVENT

        async function editEvent(event) {

            const container = event.target.parentElement;
            const id = container.querySelector(".edit").getAttribute("data-id");
            const title = container.querySelector(".element-title");
            const date = container.querySelector("#element-date");

            // Make content editable
            if (!title.isContentEditable && !date.isContentEditable) {
                title.contentEditable = true;
                date.contentEditable = true;

                // Save changes with checkmark button
                event.target.innerHTML = '<i class="fa-solid fa-check"></i>';
            } else {

                // Save new quote w innertext
                const newEvent = {
                    title: title.innerText,
                    date: date.innerText
                };

                const response = await fetch(`/events/${id}`, {
                    method: "put",
                    body: JSON.stringify(newEvent),
                    headers: {
                        "Content-Type": "application/json",
                    },
                });

                // Redirect
                if (response.redirected) {
                    window.location.href = response.url;
                }
            }
        }

        // Onclick edit event
        document.querySelectorAll(".edit").forEach((btn) => (btn.onclick = editEvent));

        // Show menu in header - add events
        function showMenu() {
            const menu = document.getElementById("event-creator");
            const menuBg = document.getElementById("overlay-bg");

            if (menu.style.display === "none") {
                menu.style.display = "block";
                menuBg.style.display = "block";
            } else {
                menu.style.display = "none";
                menuBg.style.display = "none";
            }

        }

        // DATES
        let date = new Date();

        date.setDate(date.getDate() - 7);
        let yearMonthDay = date.toLocaleDateString();

        let weekday = date.getDay();

        let savedEvents = [];

        let calendarDay = createDates(date);
        fetch("index/api", {
                method: "GET"
            })
            .then(function (response) {
                return response.json();
            })
            .then(function (events) {
                savedEvents = events;
                showDates(calendarDay);
            })

        function createDates(date) {
            let day = new Date(date);
            let weekday = day.getDay();
            let daysBefore = -weekday;
            let daysAfter = 7 + daysBefore;
            let dates = [];
            day.setDate(day.getDate() + daysBefore);
            for (let i = daysBefore; i < daysAfter; i++) {
                day.setDate(day.getDate() + 1);
                let yearMonthDay = day.toLocaleDateString();
                let obj = {
                    date: yearMonthDay,
                    dd: day.getUTCDate()
                }
                dates.push(obj);
            }
            return dates;
        }
        // SHOW DATES  
        let calendar = createDates(date);

        const calendarDates = document.getElementById("calendar-dates")
        calendarDates.addEventListener("click", (event) => {

            // Div w dates in eventlist 
            let elementDate = document.getElementById("element-date")
            // Div w dates in calendar
            let dataDate = event.target.getAttribute("data-date")

            let li = document.getElementById("list");

            savedEvents.events.forEach(events => {
                let result = savedEvents.events.filter((e) => {
                    return e.date === dataDate;
                });

                result.forEach(events => {
                    li.classList.add("remove-this");
                });


                //console.log(result);
            });
            let showAll = document.getElementById("show-all");
            showAll.addEventListener("click", showAllEvents)

            function showAllEvents() {
                let li = document.getElementById("list");
                li.classList.remove("remove-this");

            };
        });

        function showDates(dates) {
            calendarDates.innerText = "";
            dates.forEach(element => {
                let div = document.createElement("div");
                div.classList.add("date-element");
                div.setAttribute("data-date", element.date);

                div.innerText = element.date;
                calendarDates.appendChild(div);

            });
        }

        // NAVIGATION
        const previous = document.getElementById("previous");
        const next = document.getElementById("next");
        previous.addEventListener("click", () => {

            let firstWeekday = document.querySelector(".date-element");

            let thisMonday = firstWeekday.innerText;

            let day = new Date(thisMonday);
            day.setDate(day.getDate() - 7);

            calendar = createDates(day);
            showDates(calendar);
        });
        next.addEventListener("click", () => {

            let firstWeekday = document.querySelector(".date-element");

            let thisMonday = firstWeekday.innerText;

            let day = new Date(thisMonday);

            day.setDate(day.getDate() + 7);

            calendar = createDates(day);
            showDates(calendar);
        });
    </script>


</body>

</html>